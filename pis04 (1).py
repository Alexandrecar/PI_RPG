# -*- coding: utf-8 -*-
"""PIS04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16-hysmwVc5K6REfgDSlMRxRGg2hl_VzS
"""

#repetiação com for
for n in [1,2,3,4,5,6,7,8,9,10]:
  print('A capital de Montana não é Hannah')

#for com range e 1 parâmetro
for n in range(10): #mesma coisa que for n in [0,1,2,3,4,5,6,7,8,9] - começa em zero e não inclui o valor dentro do range
  print('Star Wars Episódio IX faz pessoas chorarem de desgosto')

#for com range e 2 parâmetros
for n in range(1,11): #mesma coisa que for n in [1,2,3,4,5,6,7,8,9,10] - controla onde a sequência começa
  print('She-ra e As Princesas do Poder é o melhor desenho infantil já criado, foda-se')
for n in range(1,7): #mesma coisa que for n in [1,2,3,4,5,6]
  print('Dreamworks Animation, onde está essa caralha de filme?')

#for com range e 2 parâmetros
for n in range(1,10,2): #mesma coisa que for n in [1,3,5,7,9] - controla o incremento da sequência
  print(n)
for n in range(10,1,-2): #mesma coisa que for n in [10,8,6,4,2] - negativo os 2 primeiros parâmetros são invertidos
  print(n)

#criando lista com range
print(list(range(10,1,-1)))
print(list(range(10,1)))

#função soma definindo n parâmetros
def soma(*items): #praticamente como funciona a função min() do python
  acc = 0
  for i in items:
    acc += i
  return acc

print(soma(3,5))
print(soma(3,5,7))
print(soma(3,5,7,9))

#função arredondamento de números, com padrão de casas decimais igual a zero
def arredondar(n, casas = 0):
  return(round(n,casas))
print(arredondar(5.65786543545))
print(arredondar(5.65786543545,4))

#for repetição somatório
def soma_nros_entre(a,b):
  res = 0
  for i in range(a,b+1):
    res += i
  return(res)
print(soma_nros_entre(3,5))

#função checar se número é par
def par(n):
  return(n % 2==0)

#for somar nros impares
def soma_impares(x,y): #mais eficiente que a segunda
  res = 0
  if par(x):
    for i in range(x+1,y+1,2):
      res += i
  else:
    for i in range(x,y+1,2):
      res += i
  return (res)
print(soma_impares(2,10))
print(soma_impares(3,10))

#função somar nros impares só q mais enchuto
def soma_impares2(x,y):
  res = 0
  for i in range(x,y+1):
    if not par(i):
      res += i
  return (res)
print(soma_impares2(2,10))
print(soma_impares2(3,10))

#função somar nros impares só q mais enchuto
def soma_impares3(x,y): #provavelmente tão eficiente quanto a primeira
  res = 0
  if par(x):
    x+=1
  for i in range(x,y+1,2):
    res += i
  return (res)
print(soma_impares3(2,10))
print(soma_impares3(3,10))

#função combinação de 2 números inteiros (ordem importa)
def comb(a,b):
  for i in range(a):
    for j in range(b):
      print(f'{i} - {j}')
print(comb(3,4))

#combinação de 2 números sem repetir combinação de números (ordem não importa)
def comb(a,b):
  for i in range(a):
    for j in range(i,b):
      print(f'{i} - {j}')
print(comb(3,4))

n = int(input("enter a n value:"))
d = {}

for i in range(n):
    keys = input() # here i have taken keys as strings
    values = int(input()) # here i have taken values as integers
    d[keys] = values
print(d)

'''
MERCADO

Apresentar um menu com 3 opções:
  1. Listar produtos e preços
  2. Fazer uma compra
    - Permitir que o usuário digite nomes dos produtos até terminar a compra
    - Calcular o valor final
  3. Sair'''

def mostrar_produtos(catalago):
  for produto in catalago:
    print(f'{produto}: R${catalago[produto]}')

def compra(catalago,carrinho):
  total = 0
  produto = input('Nome do produto(s para sair): ')
  while produto != 's':
    quantidade = int(input(f'Quantas unidades de {produto}? '))
    total += quantidade * catalago[produto]
    carrinho[produto] = carrinho[produto]+quantidade
    produto = input('Nome do produto(s para sair):')
  print(f'O valor total da sua foi R${total}')
  print(carrinho)

def prodmaisvendido(carrinho):
  prod_max = max(carrinho, key=carrinho.get)
  i = 0
  j = list(carrinho)[i]
  while j != list(carrinho)[2]:
    i+=1
    j = list(carrinho)[i]
    print(j)
    if all(value == carrinho[prod_max] for value in carrinho.values()):
      print('Não há produto mais vendido.')
      break
    elif carrinho[prod_max] == carrinho[j] and prod_max != j:
      print(f'{prod_max} e {j} são os produtos mais vendidos com {carrinho[prod_max]} unidades.')
  if not (carrinho[prod_max] == carrinho[j] and prod_max != j):
    print(f'{prod_max} é o produto mais vendido com {carrinho[prod_max]} unidades')



def main():
  catalago = {'pao': 8, 'tapioca': 5, 'ades': 6}
  carrinho = {'pao': 0,'tapioca': 0, 'ades': 0}
  opcao = int(input('1 - Listar produtos, 2 - Relizar uma compra, 3 - Produto mais vendido, 4 - Sair: '))
  while opcao != 4:
    if opcao == 1:
      mostrar_produtos(catalago)
    elif opcao == 2:
      compra(catalago,carrinho)
    elif opcao == 3:
      prodmaisvendido(carrinho)
    else:
      print('Esta opção não existe')
    opcao = int(input('1 - Listar produtos, 2 - Relizar uma compra, 3 - Produto mais vendido, 4 - Sair: '))

  print('\nObrigada por comprar conosco, volte sempre')
main()

